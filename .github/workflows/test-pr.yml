name: Test (PR)

on:
  workflow_dispatch:
  pull_request:
    paths-ignore:
      - '.github/workflows/test-*.yml'
      - '.github/FUNDING.yml'
      - 'docs/**'
      - 'msi/picguard/LICENSE'
      - 'msi/picguard/README.md'
      - '.gitignore'
      - 'CHANGELOG.md'
      - 'LICENSE'
      - 'Makefile'
      - 'README.md'
    branches:
      - main

# Declare default permissions as readonly.
permissions: read-all

env:
  flutter-version: '3.35.4'

jobs:
  apk:
    name: Create apk (free)
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v5

      - uses: actions/setup-java@v5
        with:
          java-version: "17.x"
          distribution: 'temurin'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        id: flutter-action
        with:
          channel: 'stable'
          flutter-version: ${{ env.flutter-version }}

      - name: Flutter doctor -v
        run: flutter doctor -v

      - name: Install Flutter dependencies
        run: flutter pub get

      - name: Remove build id
        run: sed -i -e 's/-Wl,/-Wl,--build-id=none,/' ${{ steps.flutter-action.outputs.PUB-CACHE-PATH }}/hosted/pub.dev/jni-*/src/CMakeLists.txt

      - name: Build Apk
        run: flutter build apk --debug --no-tree-shake-icons --target lib/main_free.dart --flavor freeStaging

  ios:
    name: Create ios (free)
    runs-on: macos-15
    steps:
      - name: Select Xcode version
        run: sudo xcode-select --switch /Applications/Xcode_16.4.app

      - name: print Xcode version
        run: xcodebuild -version

      - uses: actions/checkout@v5

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version: ${{ env.flutter-version }}

      - name: Flutter doctor -v
        run: flutter doctor -v

      - name: Install Flutter dependencies
        run: flutter pub get

      - name: Resolving ios dependencies
        run: pod install --repo-update
        working-directory: ios

      - name: Remove build cache
        run: |
          echo "╠ Removing build products and intermediate files from the build root..."
          xcodebuild clean
        working-directory: ios

      - name: Build Ipa
        run: |
          echo "╠ Releasing to app store..."
          flutter build ipa --no-codesign --target lib/main_free.dart --flavor free

  macos:
    name: Create macos (free)
    runs-on: macos-15
    steps:
      - uses: actions/checkout@v5

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version: ${{ env.flutter-version }}

      - name: Flutter doctor -v
        run: flutter doctor -v

      - name: Install Flutter dependencies
        run: flutter pub get

      - name: Resolving macos dependencies
        run: pod install --repo-update
        working-directory: macos

      - name: Remove build cache
        run: |
          echo "╠ Removing build products and intermediate files from the build root..."
          xcodebuild clean
        working-directory: macos

      - name: Build macOS
        run: |
          echo "╠ Releasing to app store..."
          flutter build macos --target lib/main_free.dart --flavor free

  linux:
    name: Create linux (free)
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v5

      - name: Install dependencies for Linux
        run: |
          # https://github.com/getsentry/sentry-dart/issues/2504
          sudo apt-get update -y && sudo apt-get upgrade -y
          sudo apt-get install -y curl libcurl4-openssl-dev git unzip xz-utils zip libglu1-mesa
          sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev libstdc++-12-dev
          sudo apt-get install -y p7zip-full p7zip-rar

      - name: Install ayatana-appindicator3-0.1
        run: |
          # used by tray_manager
          sudo apt-get install -y libayatana-appindicator3-dev

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version: ${{ env.flutter-version }}

      - name: Flutter doctor -v
        run: flutter doctor -v

      - name: Install Flutter dependencies
        run: flutter pub get

      - name: Build flutter
        run: |
          export SENTRY_NATIVE_BACKEND=breakpad
          flutter build linux --target lib/main_free.dart

  windows:
    name: Create windows (free)
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v5

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version: ${{ env.flutter-version }}

      - name: copy eula.rtf to the windows folder
        run: Copy-Item -Path "$pwd\macos\packaging\base\eula.rtf" -Destination "$pwd\windows\LICENSE.rtf" -Force

      - name: Install fastforge
        run: dart pub global activate fastforge

      - name: Flutter doctor -v
        run: flutter doctor -v

      - name: Install Flutter dependencies
        run: flutter pub get

      - name: Build flutter
        run: |
          $env:SENTRY_NATIVE_BACKEND = "breakpad"
          flutter build windows --target lib/main_free.dart

  web:
    name: Create web (free)
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v5

      - name: Install dependencies for Linux
        run: |
          # https://github.com/getsentry/sentry-dart/issues/2504
          sudo apt-get update -y && sudo apt-get upgrade -y
          sudo apt-get install -y curl libcurl4-openssl-dev git unzip xz-utils zip libglu1-mesa
          sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev libstdc++-12-dev

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version: ${{ env.flutter-version }}

      - name: Flutter doctor -v
        run: flutter doctor -v

      - name: Install Flutter dependencies
        run: flutter pub get

      - name: Build flutter
        run: flutter build web --target lib/main_free.dart
