name: Test Android

on:
  workflow_dispatch:

# Declare default permissions as readonly.
permissions: read-all

env:
  flutter-version: '3.32.4'
  rust-version: '1.86.0'

jobs:
  apk:
    name: Create apk (free)
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - uses: actions/setup-java@v4
        with:
          java-version: "17.x"
          distribution: 'temurin'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version: ${{ env.flutter-version }}

      - name: Flutter doctor -v
        run: flutter doctor -v

      - name: Remove target (if exists)
        run: rustup target remove armv7-linux-androideabi || true

      - name: Add Android target
        run: rustup target add armv7-linux-androideabi

      - name: Update the default toolchain version for Cargokit
        run: sed -i -e "s/'stable'/'$RUST_VERSION'/" extensions/super_native_extensions/cargokit/build_tool/lib/src/builder.dart
        env:
          RUST_VERSION: ${{ env.rust-version }}

      - name: Configure .env
        run: echo "$ENV_KEY" | base64 --decode > .env
        env:
          ENV_KEY: ${{ secrets.ENV_STG_BASE64 }}

      - name: Setup Melos
        uses: bluefireteam/melos-action@v3

      - name: Configure Keystore for Android
        run: |
          echo "$PLAY_STORE_UPLOAD_KEY" | base64 --decode > app/upload-keystore.jks
          echo "storeFile=upload-keystore.jks" >> key.properties
          echo "keyAlias=$KEYSTORE_KEY_ALIAS" >> key.properties
          echo "storePassword=$KEYSTORE_STORE_PASSWORD" >> key.properties
          echo "keyPassword=$KEYSTORE_KEY_PASSWORD" >> key.properties
        env:
          PLAY_STORE_UPLOAD_KEY: ${{ secrets.PLAY_STORE_UPLOAD_KEY }}
          KEYSTORE_KEY_ALIAS: ${{ secrets.KEYSTORE_KEY_ALIAS }}
          KEYSTORE_KEY_PASSWORD: ${{ secrets.KEYSTORE_KEY_PASSWORD }}
          KEYSTORE_STORE_PASSWORD: ${{ secrets.KEYSTORE_STORE_PASSWORD }}
        working-directory: android

      - name: Build Apk
        run: flutter build apk --no-tree-shake-icons --dart-define-from-file=.env --target lib/main_free.dart --flavor freeStaging

      - name: Set version
        id: version_step
        run: |
          VERSION=$(yq '.version' pubspec.yaml)
          echo "VERSION: $VERSION."

          VERSION_SHORT=$(echo "$VERSION" | sed -e "s/+.*//")
          echo "VERSION_SHORT: $VERSION_SHORT."

          BUILD_NUMBER=$(echo "$VERSION" | sed -e "s/.*+//")
          echo "BUILD_NUMBER: $BUILD_NUMBER."

          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "version_short=$VERSION_SHORT" >> $GITHUB_OUTPUT
          echo "build_number=$BUILD_NUMBER" >> $GITHUB_OUTPUT

      # Package the build.
      - name: Copy build for Android
        run: |
          ls -la
          echo "VERSION: $VERSION_SHORT.$BUILD_NUMBER"
          cp *.apk $GITHUB_WORKSPACE/PicGuard-"$VERSION_SHORT.$BUILD_NUMBER".apk
        working-directory: build/app/outputs/apk/freeStaging/release
        env:
          VERSION_SHORT: ${{ steps.version_step.outputs.version_short }}
          BUILD_NUMBER: ${{ steps.version_step.outputs.build_number }}

      - uses: actions/upload-artifact@v4
        with:
          name: android-apk-artifact
          path: ./*.apk

      - name: Clean up
        if: ${{ always() }}
        run: |
          rm -f android/app/upload-keystore.jks
          rm -f android/key.properties
          rm -f .env
