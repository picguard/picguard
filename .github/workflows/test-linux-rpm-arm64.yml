name: Test Linux rpm (arm64)

on:
  workflow_dispatch:

# Declare default permissions as readonly.
permissions: read-all

jobs:
  rpm:
    name: Create linux rpm (aarch64)
    runs-on: ubuntu-22.04-arm
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          java-version: "17.x"
          distribution: 'temurin'

      - name: Install dependencies for Linux
        run: |
          sudo apt-get update -y && sudo apt-get upgrade -y
          sudo apt-get install -y curl libcurl4-openssl-dev git unzip xz-utils zip libglu1-mesa
          sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev libstdc++-12-dev
          sudo apt-get install -y rpm patchelf

      - name: Setup Flutter
        shell: bash
        run: |
          chmod +x ./scripts/install-flutter-ubuntu-actions.sh
          ./scripts/install-flutter-ubuntu-actions.sh

      - name: Flutter doctor -v
        run: flutter doctor -v

      - name: Configure .env
        run: echo "$ENV_KEY" | base64 --decode > .env
        env:
          ENV_KEY: ${{ secrets.ENV_STG_BASE64 }}

      - name: Install flutter_distributor
        run: dart pub global activate flutter_distributor

      - name: Install yq
        run: |
          if ! command -v yq >/dev/null 2>&1; then
            echo "yq not exists"
            wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_arm64 -O /usr/bin/yq &&\
            chmod +x /usr/bin/yq
          fi
          yq --version

      - name: Update make_config.yaml
        run: yq -i '.build_arch = "aarch64"' linux/packaging/rpm/make_config.yaml

      - name: Build RPM
        run: |
          flutter_distributor package \
            --flutter-build-args "dart-define-from-file=.env,target=lib/main_free.dart" \
            --platform linux \
            --targets rpm \
            --artifact-name '{{name}}_{{build_name}}+{{build_number}}_{{platform}}_aarch64.{{ext}}'
      
      # Package the build.
      - name: Copy build for rpm
        run: ls -laR
        working-directory: dist

      - uses: actions/upload-artifact@v4
        with:
          name: linux-rpm-arm64-artifact
          path: ./dist/**/*.rpm

      - name: Clean up
        if: ${{ always() }}
        run: rm -f .env
