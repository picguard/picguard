plugins {
    id "com.android.application"
    id "org.jetbrains.kotlin.android"
    id "dev.flutter.flutter-gradle-plugin"
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

def proKeystoreProperties = new Properties()
def proKeystorePropertiesFile = rootProject.file('key-pro.properties')
if (proKeystorePropertiesFile.exists()) {
    proKeystoreProperties.load(new FileInputStream(proKeystorePropertiesFile))
}

android {
    namespace "com.kjxbyz.picguard"
    compileSdk = flutter.compileSdkVersion
    ndkVersion "27.2.12479018"
//    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.kjxbyz.picguard"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdkVersion 24
        targetSdk = flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName
    }

    signingConfigs {
        if (System.getenv("ANDROID_KEYSTORE_PATH")) {
            free {
                storeFile file(System.getenv("ANDROID_KEYSTORE_PATH"))
                keyAlias System.getenv("ANDROID_KEYSTORE_ALIAS")
                keyPassword System.getenv("ANDROID_KEYSTORE_PRIVATE_KEY_PASSWORD")
                storePassword System.getenv("ANDROID_KEYSTORE_PASSWORD")
            }
        } else {
            free {
                storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
                storePassword keystoreProperties['storePassword']
            }
        }

        if (System.getenv("ANDROID_KEYSTORE_PATH_PRO")) {
            pro {
                storeFile file(System.getenv("ANDROID_KEYSTORE_PATH_PRO"))
                keyAlias System.getenv("ANDROID_KEYSTORE_ALIAS_PRO")
                keyPassword System.getenv("ANDROID_KEYSTORE_PRIVATE_KEY_PASSWORD_PRO")
                storePassword System.getenv("ANDROID_KEYSTORE_PASSWORD_PRO")
            }
        } else {
            pro {
                storeFile proKeystoreProperties['storeFile'] ? file(proKeystoreProperties['storeFile']) : null
                keyAlias proKeystoreProperties['keyAlias']
                keyPassword proKeystoreProperties['keyPassword']
                storePassword proKeystoreProperties['storePassword']
            }
        }
    }

    flavorDimensions "default", "env"
    productFlavors {
        free {
            dimension "default"
            signingConfig signingConfigs.free
        }

        pro {
            dimension "default"
            signingConfig signingConfigs.pro
            applicationIdSuffix ".pro"
        }

        staging {
            dimension "env"
            applicationIdSuffix ".dev"
        }

        production {
            dimension "env"
        }
    }

    buildTypes {
        release {
            minifyEnabled true
        }
        debug {
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }

    packagingOptions {
        jniLibs {
            // Enabling flag to compress JNI Libs to reduce APK size Ref: https://developer.android.com/topic/performance/reduce-apk-size?hl=zh-cn#extract-false
            useLegacyPackaging true
        }
    }

    // Required by F-Droid
    dependenciesInfo {
        // Disables dependency metadata when building APKs.
        includeInApk = false
        // Disables dependency metadata when building Android App Bundles.
        includeInBundle = false
    }
}

flutter {
    source '../..'
}

dependencies {}
